using LinearAlgebra
using Gurobi
using JuMP

Mtheirs = [
        0.480202 0.537048 0.693531 -281.882
        0.759933 -0.649588 -0.0231578 483.794
        0.438073 0.538158 -0.720055 276.06
        0.0 0.0 0.0 1.0
]

Mactual = [
        0.440546 0.606362 0.662 -281.882
        0.771218 -0.633073 0.0666373 483.794
        0.459501 0.48119 -0.746535 276.06
        0.0 0.0 0.0 1.0
]

Msensible = [
        0.4405 0.6064 0.6620 -281.8821
        0.7712 -0.6331 0.0666 483.7939
        0.4595 0.4812 -0.7465 276.0602
        0 0 0 1.0000
]

M = Mactual

r = [0; 0; 0; 0; 0; 0; 0]
d = [340; 0; 400; 0; 400; 0; 126]
α = [-π / 2, π / 2, -π / 2, π / 2, -π / 2, π / 2, 0]
θl = [-2.9671; -2.0944; -2.9671; -2.0944; -2.9671; -2.0944; -3.0543]
θh = [2.9671; 2.0944; 2.9671; 2.0944; 2.9671; 2.0944; 3.0543]

w = normalize(ones(7))
θ = zeros(7)

#=
@constraint m x[4, 1:3, :] .== 0
@constraint m x[4, 4, :] .== 1
@constraint m T(1) * T(2) .== x[:, :, 1]
@constraint m x[:, :, 1] * T(3) .== x[:, :, 2]
@constraint m x[:, :, 2] * T(4) .== x[:, :, 3]
@constraint m x[:, :, 3] * T(5) .== x[:, :, 4]
@constraint m x[:, :, 4] * T(6) .== x[:, :, 5]
@constraint m x[:, :, 5] * T(7) .== M
@constraint m c .^ 2 + s .^ 2 .== 1
@constraint m (c .+ 1) .* tan.(θl ./ 2) .- s .<= 0
@constraint m (c .+ 1) .* tan.(θh ./ 2) .- s .>= 0
=#


sol = [
        -0.408833022287725
        -0.973777295554142
        -0.823238993601953
        -1.44436562369012
        -0.0076269233501136
        -1.246589257526
        1.16830383119891
]

sol = atan.(value.(s), value.(c))


function dht(x, d, α, r)
        z = [
                cos(x) -sin(x) 0 0
                sin(x) cos(x) 0 0
                0 0 1 d
                0 0 0 1
        ]
        x = [
                1 0 0 r
                0 cos(α) -sin(α) 0
                0 sin(α) cos(α) 0
                0 0 0 1
        ]
        z * x
end


solT(i) = dht(sol[i], d[i], α[i], r[i])

prod(solT(i) for i in 1:7)
